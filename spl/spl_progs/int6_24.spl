breakpoint;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=7;
alias usersp R0;
usersp=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=usersp;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias physicalpagenum R1;
alias offset R2;
alias filedescphysicaladdr R3;
physicalpagenum=[PTBR+2*((usersp-4)/512)];
offset=(usersp-4)%512;
filedescphysicaladdr=physicalpagenum*512+offset;
alias fileDesc R4;
fileDesc=[filedescphysicaladdr];
alias physicalAddrRetVal R5;

if(fileDesc==-1) then
	alias word R5;
	word=[[PTBR+2*((usersp-3)/512)]*512+((usersp-3)%512)];
	multipush(R0);
	
	R1=4;
	R2=[SYSTEM_STATUS_TABLE+1];
	R3=word;
	call DEVICE_MANAGER;
	multipop(R0);
	alias physicalAddrRetVal R6;
	physicalAddrRetVal=([PTBR+2*((usersp-1)/512)]*512)+((usersp-1)%512);
	[physicalAddrRetVal]=0;
	

else
	
	physicalAddrRetVal=([PTBR+2*((usersp-1)/512)]*512)+((usersp-1)%512);
	if((fileDesc>8)||(fileDesc<0)) then
		
		[physicalAddrRetVal]=-1;
		SP=usersp;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	
	endif;	
	alias resourceEntry R6;
	resourceEntry=([PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]+1)*512-16+2*fileDesc;
	if([resourceEntry]!=FILE) then
		[physicalAddrRetVal]=-1;
		SP=usersp;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	endif;
	
	alias inodeIndex R7;
	inodeIndex=[OPEN_FILE_TABLE+4*[resourceEntry+1]];
	
	alias retValue R8;
	multipush(R0,R1,R2,R3,R4,R5,R6,R7);
	R1=4;
	R2=inodeIndex;
	R3=[SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;
	retValue=R0;
	multipop(R0,R1,R2,R3,R4,R5,R6,R7);
	
	if(retValue==-1) then
		[physicalAddrRetVal]=-1;
		SP=usersp;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		ireturn;
	endif;
	
	alias Lseek R8;
	Lseek=[OPEN_FILE_TABLE+4*[resourceEntry+1]+2];
	
	alias word R9;
	word=[[PTBR+2*((usersp-3)/512)]*512+((usersp-3)%512)];
	word=[PTBR+2*((word)/512)]*512+((word)%512);
	
	if(inodeIndex==INODE_ROOT) then
		if(Lseek==480) then
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			R1=5;
			R2=inodeIndex;
			R3=[SYSTEM_STATUS_TABLE+1];
			call RESOURCE_MANAGER;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			[physicalAddrRetVal]=-2;
			SP=usersp;
			[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
			ireturn;
		endif;
		[word]=[ROOT_FILE*512+Lseek];
		[OPEN_FILE_TABLE+4*[resourceEntry+1]+2]=Lseek+1;
	
	else
		if(Lseek==[INODE_TABLE+16*inodeIndex+2]) then
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			R1=5;
			R2=inodeIndex;
			R3=[SYSTEM_STATUS_TABLE+1];
			call RESOURCE_MANAGER;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
			[physicalAddrRetVal]=-2;
			SP=usersp;
			[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
			ireturn;
		endif;
		
		multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
		R1=2;
		R2=[INODE_TABLE+16*inodeIndex+8+(Lseek/512)];
		R3=Lseek%512;
		R4=word;
		call FILE_MANAGER;
		multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
		[OPEN_FILE_TABLE+4*[resourceEntry+1]+2]=Lseek+1;
		
	
	endif;
	multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
	R1=5;
	R2=inodeIndex;
	R3=[SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
endif;
[physicalAddrRetVal]=0;
SP=usersp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
