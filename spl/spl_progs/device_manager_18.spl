alias functionNum R1;
alias currentPID R2;
alias wordAddr R3;
breakpoint;
if(functionNum==2) then

	alias pageNo R3;
	alias blockNo R4;
	multipush(R1,R2,R3,R4);
	functionNum=3;
	R2=currentPID;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3,R4);
	[DISK_STATUS_TABLE+1]=0;
	[DISK_STATUS_TABLE+2]=R3;
	[DISK_STATUS_TABLE+3]=R4;
	load(R3,R4);
	[PROCESS_TABLE+16*currentPID+4]=WAIT_DISK;
	multipush(R1,R2,R3,R4);
	call SCHEDULER;
	
	multipop(R1,R2,R3,R4);
	return;
endif;


if(functionNum==3) then
	
	multipush(R1,R2,R3);
	functionNum=8;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	print(R3);
	multipush(R1,R2,R3);
	functionNum=9;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	return;
endif;
if(functionNum==4) then
	
	multipush(R1,R2,R3);
	functionNum=8;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3);
	read;
	[PROCESS_TABLE+16*currentPID+4]=WAIT_TERMINAL;
	multipush(R1,R2,R3);
	call SCHEDULER;
	multipop(R1,R2,R3);
	[[PTBR+2*(R3/512)]*512+(R3%512)]=[PROCESS_TABLE+16*currentPID+8];
	return;
		
else
	return;
endif;
