type
List
{
    int data;
    List next;
}
endtype
            
decl
    List head;
    int x, pid, temp, length;
enddecl
            
int main()
{
decl
    List p, q;
    int i;
enddecl
            
begin
    temp = exposcall("Heapset");
    head = null;
    q = head;

    length=1;
    while (length <= 100)  do
        p = exposcall("Alloc",2);
        p.data = length;
        p.next = null;
        
        if (head == null) then
            head = p;
            q = p;
        else
            q.next = p;
            q = q.next;
        endif;
                          
        length = length+1;
    endwhile;
              
                      
    pid = exposcall("Fork");
    if(pid == 0) then
        p = head;
        x = p.data;
        temp = exposcall("Write",-2,"child");
        temp = exposcall("Write",-2,x);
        
    else
        q = head.next;
        x = q.data;
        temp = exposcall("Write",-2,"parent");
        temp = exposcall("Write",-2,x);
        
    endif;
                
    return 0;
end

}
